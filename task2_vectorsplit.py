# Имеется вектор размера N. Необходимо разделить его на M < N равных частей (то есть чтобы количество элементов в каждой части было одинаковым).
# Части не должны пересекаться и должны покрывать весь вектор (исключение - допускаются промежутки от начала вектора до начала первой части и от конда последней части до конца вектора,
# но в этом случае необходимо добиться, чтобы разница в величине этих промежутков была минимальной).
# Результатом должны являться индексы начала и конца каждой части (либо вывод на экран, либо сохранение в любую структуру данных).

# Функция возвращает кортежи с индексами начала и конца интервалов
def getintervals(M,N):
    if M>=N:
        return 0
    # определим размер интервала
    size=N//M
    # определяем зазоры перед первым и после последнего
    gap=(N%M)//2
    # создаем список границ интервалов
    intervals=[]
    # индекс начала первого интервала
    beg=gap
    # индекс конца первого интервала
    end=beg+size-1

    intervals.append((beg,end))

    i = 1
    # аналогично рассчитываем оставшиеся интервалы
    while i<M:
        beg=end+1
        end=beg+size-1
        intervals.append((beg,end))
        i=i+1
    return intervals



def main():
    print(getintervals(20,90))

if __name__=='__main__':
    main()